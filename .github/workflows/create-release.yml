on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-latest', 'macos-12']

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - run: pip install -r ./PythonInterface/requirements.txt pyinstaller
      - name: Build with PyInstaller
        run: |
          $os = "${{ matrix.os }}"  # Set the operating system variable from matrix
          if ($os -eq "windows-latest") {
            New-Item -Path './PythonInterface/dist' -ItemType Directory
            cd ./PythonInterface/
            pyinstaller even_photos_resolve.py --onefile --name even_photos_resolve-x86_64-pc-windows-msvc.exe
          } elseif ($os -eq "macos-12") {
            New-Item -Path './PythonInterface/dist' -ItemType Directory
            cd ./PythonInterface/
            pyinstaller even_photos_resolve.py --onefile --name even_photos_resolve-x86_64-apple-darwin
          }
        shell: pwsh

      - name: Install dependencies (ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './TauriApp/src-tauri -> target'

      # Setup Node.js for Tauri
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Install Tauri CLI
      - name: Install Tauri dependencies
        run: |
         cd TauriApp
         npm install

      - name: Build the app
        uses: tauri-apps/tauri-action@dev
        env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
           tagName: app-v__VERSION__
           releaseName: 'App v__VERSION__'
           releaseDraft: true
           prerelease: true
           projectPath: ./TauriApp/

      # Use softprops/action-gh-release@v2 for creating release and uploading assets
      - name: Create and Upload Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./TauriApp/src-tauri/target/release/bundle/nsis/*.exe
            ./TauriApp/src-tauri/target/release/bundle/msi/*.msi
            ./TauriApp/src-tauri/target/release/bundle/dmg/*.dmg
          fail_on_unmatched_files: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
