on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: ['windows-latest', 'macos-12']
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - run: pip install -r ./PythonInterface/requirements.txt pyinstaller
      - name: Build with PyInstaller
        run: |
          $os = "${{ matrix.os }}"
          if ($os -eq "windows-latest") {
            New-Item -Path './PythonInterface/dist' -ItemType Directory
            cd ./PythonInterface/
            pyinstaller even_photos_resolve.py --onefile --name even_photos_resolve-x86_64-pc-windows-msvc.exe
          } elseif ($os -eq "macos-12") {
            New-Item -Path './PythonInterface/dist' -ItemType Directory
            cd ./PythonInterface/
            pyinstaller even_photos_resolve.py --onefile --name even_photos_resolve-x86_64-apple-darwin
          }
        shell: pwsh

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Tauri dependencies
        run: |
          cd TauriApp
          npm install

      - name: Extract Tag Name
        id: extract_tag
        run: echo "##[set-output name=tag;]$(echo ${GITHUB_REF#refs/tags/})"
        env:
          GITHUB_REF: ${{ github.ref }}

      - name: Build and Release with Tauri
        uses: tauri-apps/tauri-action@v0
        with:
          includeRelease: true
          projectPath: ./TauriApp/
          tagName: ${{ steps.extract_tag.outputs.tag }}
          releaseDraft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}