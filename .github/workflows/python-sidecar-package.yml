on:
  push:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-latest', 'ubuntu-latest', 'macos-latest', 'macos-14']

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - run: pip install -r ./PythonInterface/requirements.txt pyinstaller
      - name: Build with PyInstaller
        run: |
          $os = "${{ matrix.os }}"  # Set the operating system variable from matrix
          if ($os -eq "windows-latest") {
            New-Item -Path './PythonInterface/dist' -ItemType Directory
            cd ./PythonInterface/
            pyinstaller even_photos_resolve.py --onefile --name even_photos_resolve-x86_64-pc-windows-msvc.exe
          } elseif ($os -eq "ubuntu-latest") {
            New-Item -Path './PythonInterface/dist' -ItemType Directory
            cd ./PythonInterface/
            pyinstaller even_photos_resolve.py --onefile --name even_photos_resolve-x86_64-unknown-linux-gnu
          } elseif ($os -eq "macos-latest") {
            New-Item -Path './PythonInterface/dist' -ItemType Directory
            cd ./PythonInterface/
            pyinstaller even_photos_resolve.py --onefile --name even_photos_resolve-x86_64-apple-darwin
          } elseif ($os -eq "macos-14") {
            New-Item -Path './PythonInterface/dist' -ItemType Directory
            cd ./PythonInterface/
            pyinstaller even_photos_resolve.py --onefile --name even_photos_resolve-aarch64-apple-darwin
          }
        shell: pwsh

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Executables
          path: ./PythonInterface/dist
          if-no-files-found: error

                # Setup Node.js for Tauri
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Install Tauri CLI
      - name: Install Tauri dependencies
        run: |
         cd TauriApp
         npm tauri build # Or npm run tauri build

      # Build Tauri application
      - name: Build Tauri App
        run: |
          cd TauriApp
          npm tauri build # Or npm run tauri build

      # Upload Tauri Artifacts
      - name: Upload Tauri Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Tauri Binaries
          path: ./TauriApp/src-tauri/target/release/
          if-no-files-found: error